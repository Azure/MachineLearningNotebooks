Here are the activities done by the engineering manager throughout the course of a milestone.

The release is on the [3rd Thursday of every month](https://about.gitlab.com/releases/). We use a cutoff date of the Friday before that to get any work completed. 
You can see more about the [release process here](/handbook/engineering/releases/).

On the first of the month a new [planning issue](https://gitlab.com/gitlab-org/create-stage/-/issues/?sort=created_date&state=opened&label_name%5B%5D=group%3A%3Acode%20review&label_name%5B%5D=Planning%20Issue) is automatically created for the next milestone. Create a thread for **Backend** and tag the backend team to get ideas for issues to include in the upcoming milestone planning.

#### Starting a Milestone

Here are the tasks to do at the start of the milestone. For these dates, use the Monday before the 3rd Thusday as day 0 since the Friday before that is the engineering cutoff.

| Days into Milestone | Action |
|---------------------|--------|
| 0 | Label all issues with the `Deliverable` and `workflow::ready for development` labels. |
| 0 | Assign issues to team members based on capacity. |
| 0 | Send emails to team members with their current issue board. |
| 1 | Move all open issues from the previous milestone into this new milestone |
| 3 | Find issues to investigate as part of the [planning / backlog refinement process](/handbook/engineering/development/dev/create/code-review/backend/#planning). Create a new issue using the [backlog refinement template](https://gitlab.com/gitlab-com/create-stage/code-review-be/-/issues/new?issuable_template=backlog_refinement). |
| 3 | Calculate the percentage breakdown of features, bugs, and maintenance and add it to the current planning issue. |

#### Wrapping Up a Milestone

Here are the tasks to do at the end of the milestone. The dates are relative to the cutoff date, which is the Friday before the 3rd Thursday.

| Days before Cutoff | Action |
|--------------------|--------|
| 7 | Move any issues that still have the `workflow::ready for development` label to the next milestone because it is likely it will not make the current milestone if it has not been started yet. |
| 7 | Make sure we have a capacity estimate for the next milestone. Check with team members to make sure all PTO has been entered. Add the capacity estimate to the planning issue. |
| 4 | Move any issues that have the `workflow::in dev` label to the next milestone because if they are still in progress it is likely they will not make the current milestone. |
| 2 | Have a planning meeting with the PM for Code Review to prioritize and pick issues for the milestone that fit within the available capacity. |